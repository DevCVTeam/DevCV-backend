plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.devcv'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt
}

repositories {
	mavenCentral()
}
// springsecurity 부분 주석처리 추후 설정
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security.oauth:spring-security-oauth2:2.0.18.RELEASE'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
//	implementation 'com.h2database:h2'
	testImplementation 'org.projectlombok:lombok:1.18.28'
	compileOnly 'org.projectlombok:lombok'
	compileOnly("org.springframework.boot:spring-boot-devtools")
//	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'jakarta.mail:jakarta.mail-api:2.1.2'
	implementation 'javax.validation:validation-api:2.0.1.Final'
	implementation 'org.json:json:20231013'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	configurations 'asciidoctorExt'
	baseDirFollowsSourceFile()
	inputs.dir snippetsDir
	dependsOn test
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs/")
}

build {
	dependsOn copyDocument
}
